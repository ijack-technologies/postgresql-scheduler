services:
  # dev_pg_scheduler:
  scheduler_dev:
    # image: ubuntu:bionic
    # https://stackoverflow.com/questions/56751565/pq-could-not-resize-shared-memory-segment-no-space-left-on-device
    # docker by-default restricts size of shared memory to 64MB, which is not enough for PostgreSQL sometimes.
    shm_size: 4gb
    # # Don't ever close this container
    # tty: true
    volumes:
      # Mount the root folder that contains .git with 'consistent' permissions, which helps with file permissions issues.
      - .:/workspace:consistent
      # Windows home folder:
      # - C:\Users\seanm\:/c_users_sean
      # [Optional] For reusing Git SSH keys.
      # - ~/.ssh:/root/.ssh-local:ro
    build:
      # context: where should docker compose look for the Dockerfile?
      # i.e. either a path to a directory containing a Dockerfile, or a url to a git repository
      context: .
      dockerfile: Dockerfile.dev
    # this will signal that the connection is alive after 200 seconds,
    # which is less than the time it takes to drop the connection (300 seconds?), thus preventing it from being dropped.
    # https://stackoverflow.com/questions/56289874/postgres-closes-connection-during-query-after-a-few-hundred-seconds-when-using-p
    # https://github.com/moby/moby/issues/31208#issuecomment-303905737
    sysctls:
      - net.ipv4.tcp_keepalive_time=200
      - net.ipv4.tcp_keepalive_intvl=30
      - net.ipv4.tcp_keepalive_probes=10
    env_file: .env
      # environment:
      #   - FLASK_CONFIG=development
      #   - FLASK_ENV=development
      # Forwards port 5001 from the Docker host (e.g. Windows desktop) to the dev environment container's port 5000
      # ports:
      #   - 0.0.0.0:5000:5000
      # - 0.0.0.0:5005:5005
      # - 0.0.0.0:85:85
      # # npm start
      # - 0.0.0.0:3001:3000
      # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
    # work_mem='64MB'
    # command: /bin/sh -c "while sleep 1000; do :; done"
    # links:
    #   - container-2
    # networks:
    #   - myijack-network

# networks:
#   myijack-network:
#     # driver: bridge
#     external:
#       name: myijack-network
