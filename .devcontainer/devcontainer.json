// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/python-3-miniconda
{
    "name": "postgresql_scheduler",
    // Path that the Docker build should be run from relative to devcontainer.json.
    // For example, a value of ".." would allow you to reference content in sibling directories. Defaults to "."
    // Use either the Dockerfile or docker-compose.yml to create the Docker container
    // "dockerFile": "Dockerfile",
    "dockerComposeFile": "../docker-compose.dev.yml",
    // Required if using dockerComposeFile. The name of the service VS Code should connect to once running.
    // The 'service' property is the name of the service for the container that VS Code should
    // use. Update this value and .devcontainer/docker-compose.yml to the real service name.
    // "service": "dev_pg_scheduler",
    "service": "scheduler_dev",
    // The optional 'workspaceFolder' property is the path VS Code should open by default when
    // connected. This is typically a file mount in .devcontainer/docker-compose.yml
    "workspaceFolder": "/workspace",
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-azuretools.vscode-docker",
                "GitHub.copilot",
                "ms-toolsai.jupyter",
                "ms-toolsai.datawrangler",
                "charliermarsh.ruff",
                "esbenp.prettier-vscode",
                "adpyke.vscode-sql-formatter",
                "tamasfe.even-better-toml",
                "monosans.djlint",
                "foxundermoon.shell-format",
                "redhat.vscode-yaml"
            ],
            "settings": {
                "remote.extensionKind": {
                    "ms-azuretools.vscode-docker": "workspace"
                },
                "git.enableSmartCommit": true,
                "git.autofetch": true
            }
        }
    },
    // Run commands after the container is created.
    // "postCreateCommand": "cd /workspaces/upload_to_aws/client && npm install && npm run build"
}